@model CASMUL.Models.Item.EditItemViewModel

<div class="row">

    <div class="col-md-6 col-md-offset-3 ui-sortable">
        <!-- begin panel -->
        <div class="panel panel-inverse">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="~/Item/Index" class="btn btn-xs btn-primary" data-original-title="Crear Usuario" title="Crear Usuario"><i class="fa fa-lisr"></i> Listado</a>
                </div>
                <h4 class="panel-title">Editando Item</h4>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        
                        <div class="form-group">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.cod_item, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.cod_item, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.cod_item, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCategoria, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.IdCategoria, new SelectList(ViewBag.SelectCategoria, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdUnidad, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.IdUnidad, new SelectList(ViewBag.SelectUnidad, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdUnidad, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CantidadDisponible, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DisplayFor(model => model.CantidadDisponible, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CantidadDisponible, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.IdItem, new { htmlAttributes = new { @class = "form-control" } })
                        <div class="form-group">

                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
