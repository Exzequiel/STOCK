@model CASMUL.DB.proveedor

@{
    ViewBag.Title = "Create";
}

<div class="row">

    <div class="col-md-12 ui-sortable">
        <!-- begin panel -->
        <div class="panel panel-success">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand" data-original-title="" title="" data-init="true"><i class="fa fa-expand"></i></a>

                </div>
                <h4 class="panel-title"> Crear Proveedor</h4>
            </div>

            <div class="panel-body">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Proveedor</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("Nombre Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.nombre_proveedor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.nombre_proveedor, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Codigo Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.cod_proveedor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.cod_proveedor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Dirección", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Telefono", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Correo Electrónico", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Registro Tributario", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.rtn, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.rtn, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Contacto", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.contacto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Giro de la Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.giro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.giro, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Razón Social", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.razon_social, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.razon_social, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Ciudad", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ciudad, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ciudad, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("País", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.pais, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.pais, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        <!-- end panel -->
    </div>
    <!-- end col-10 -->
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#Telefono").mask("9999-9999");
        $("#RTN").mask("9999-9999-999999");

        function CrearUsuario() {

            if (!$("form").valid()) { return false; }

            LoadWaitNotification();
            $.ajax({
                url: '@Url.Action("CrearUsuario","Usuario")',
                type: "Get",
                dataType: 'json',
                data: $('form').serialize(),
                success: function (data) {
                    ShowNotification(data.Estado, data.Titulo, data.Mensaje)
                    if (data.Estado) {
                        document.location.href = '/Usuario/Index';
                    }

                },
                error: function (xhr, textStatus, errorThrown) {
                    alert(textStatus + ": Problemas con la red");
                    UnloadWaitNotification();
                },
                complete: function () { UnloadWaitNotification(); }
            });
        };



    </script>
}